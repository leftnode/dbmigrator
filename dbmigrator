#!/usr/bin/env php
<?php

declare(encoding='UTF-8');
require_once('DbMigrator/DbMigrator.php');

$cwd = getcwd();
$local_config = implode(DIRECTORY_SEPARATOR, array($cwd, 'build', 'dbmigration.config.php'));

if (is_file($local_config)) {
	require_once($local_config);
} else {
	require_once('DbMigrator/DbMigrator.Config.php');
}

$dbMigrator = new DbMigrator(DB_TYPE);
$dbMigrator->setMigrationPath(MIGRATION_PATH);

if (1 == $argc) {
	$dbMigrator->error("Please enter at least one argument.");
	exit(1);
}

try {
	$db_type = strtolower(DB_TYPE);

	$pdo = new PDO($db_type . ':host=' . DB_HOST . ';dbname=' . DB_NAME, DB_USER, DB_PASSWORD);
	if ('mysql' === $db_type) {
		$pdo->setAttribute(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, 1);
	}

	$dbMigrator->attachPdo($pdo);
} catch ( PDOException $e ) {
	$dbMigrator->error("Failed to connect to the database with specified credentials. Actions 'rollback' and 'update' are unavailable, 'create' is not.");
}

$action = strtolower($argv[1]);

switch ($action) {
	case 'create': {
		if ($argc < 2) {
			$dbMigrator->error("Enter the name of at least one script to create.");
		} else {
			$scriptList = array_slice($argv, 2);
			$scriptListCount = count($scriptList);

			$dbMigrator->message("Creating {$scriptListCount} migration " . ( $scriptListCount > 1 ? 'scripts' : 'script' ) . '.' . PHP_EOL);

			for ( $i=0; $i<$scriptListCount; $i++ ) {
				$dbMigrator->create($scriptList[$i]);
			}
		}

		break;
	}

	case 'snapshot': {
		if ($argc != 3) {
			$dbMigrator->error("Specify a snapshot name.");
		} else {
			$snapshot = $argv[2];

			$dbMigrator->createSnapshot($snapshot);
		}
	}

	case 'update': {
		$version = -1;
		if (3 == $argc) {
			$version = abs(intval($argv[2]));
		}

		$dbMigrator->update($version);

		break;
	}

	case 'default': {
		$dbMigrator->error("Usage: dbmigrator [create,update] [<script-name>,<version-number>]");
		break;
	}
}

exit(0);